/// ----------------------------------------------------------------------------
/// Settings
///
/// The settings map allows you to conveniently define all of your variables in
/// a single map.
///
/// You should have a map like so:
///
/// ```scss
/// $settings: (
///   border: 1px solid black,
///   zIndex: (
///     nav: 2,
///     default: 1
///   )
/// );
/// ```
///
/// and then you would simply use the `setting` function to call your defined
/// settings:
///
/// ```scss
/// .foo {
///   border-top: setting('border');
///   z-index: setting('zIndex.default');
/// }
/// ```
///
/// which will output:
///
/// ```css
/// .foo {
///   border-top: 1px solid black;
///   z-index: 1;
/// }
/// ```
///
/// You can also pass a second optional paramter to the `setting` function to
/// return a setting from a different map. This is ideal for component-specific
/// settings. By default, the `setting` function looks for a map named
/// `$settings`, but say you have partial named `_masthead.scss`, you might do
/// something like so:
///
/// ```scss
/// // _masthead.scss
///
/// $masthead: (
///   breakpoint: em(800px),
///   height: (
///     min: 200px,
///     max: 90vh
///   )
/// );
///
/// .masthead {
///   height: setting('height.min', $masthead);
///
///   @media (min-width: setting('breakpoint', $masthead)) {
///     height: setting('height.max', $masthead);
///   }
/// }
/// ```
///
/// and when compiled will read:
///
/// ```css
/// .masthead {
///   height: 200px;
///
///   @media (min-width: 50em) {
///     height: 90vh;
///   }
/// }
/// ```
/// ----------------------------------------------------------------------------
$settings: (
  border: 1px solid #ddd,
  container: 1200px,
  gutter: 16px,
  transition: (
    method: linear,
    speed: 150ms
  ),
  zIndex: (
    aboveAll: 100
  )
) !global;
